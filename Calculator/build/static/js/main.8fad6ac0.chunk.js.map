{"version":3,"sources":["components/Screen.js","components/Button.js","components/Keyboard.js","components/Calculator.js","components/Developer.js","App.js","index.js"],"names":["exp","pointCount","isMoreThanNineCharacters","Screen","val","isOperator","num","length","slice","eval","isDecimal","indexOf","document","querySelector","classList","add","remove","className","STYLES","SIZES","TYPES","Button","props","buttonStyle","includes","styling","buttonSize","size","type","style","height","width","children","Keyboard","dispatch","useState","buttonWidth","setButtonWidth","buttonHeight","setButtonHeight","keyboardRef","useRef","current","clientWidth","clientHeight","useLayoutEffect","window","innerHeight","ref","onClick","e","target","contains","payload","textContent","reducer","state","action","Calculator","useReducer","load","setLoad","rerender","useEffect","addEventListener","removeEventListener","Developer","color","fontSize","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8fad6ac0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Screen.css';\r\n\r\nlet exp = \"\";\r\nlet pointCount = 0;\r\nlet isMoreThanNineCharacters = 0;\r\n\r\nconst Screen = ({val}) => {\r\n\r\n    const isOperator = (num) => {\r\n        return num === '+' || num === '-' || num === '*' || num === '/';\r\n    }\r\n\r\n    // if AC clicked\r\n    if(val === 'clear') {\r\n        exp = '0';\r\n        pointCount = 0;\r\n    }\r\n\r\n    // if backspace clicked\r\n    else if(val === 'backspace') {\r\n\r\n        // if point is deleted\r\n        if(exp[exp.length - 1]) pointCount = 0;\r\n\r\n        // if operator is deleted\r\n        if(isOperator(exp[exp.length - 1])) pointCount = 1;\r\n\r\n        exp = exp.slice(0,exp.length - 1);\r\n\r\n        // if expression becomes empty(\"\") after deleting reset it to 0 \r\n        if(exp === '') exp = \"0\";\r\n    }\r\n\r\n    // if equal to is clicked\r\n    else if(val === 'equals') {\r\n\r\n        // if last char is operator\r\n        if(isOperator(exp[exp.length - 1])) {\r\n            exp = \"\" + eval(exp.slice(0,exp.length - 1));\r\n            let isDecimal = exp.indexOf('.');\r\n            if(isDecimal !== -1) {\r\n                pointCount = 1;\r\n            }\r\n            else pointCount = 0;\r\n        }\r\n\r\n        // in all other cases\r\n        else {\r\n            exp = \"\" + eval(exp);\r\n\r\n            // after evaluating if it is decimal setting it's precision\r\n            let isDecimal = exp.indexOf('.');\r\n            if(isDecimal !== -1) {\r\n                pointCount = 1;\r\n                exp = exp.slice(0,isDecimal) + exp.slice(isDecimal,isDecimal + 5);\r\n            }\r\n            else pointCount = 0;\r\n        }\r\n    }\r\n\r\n    // if numbers,point,arithmetic operators clicked\r\n    else {\r\n\r\n        // if expression is 0 and operator is clicked\r\n        if(exp === \"0\" && isOperator(val)) {\r\n            exp = exp + val;\r\n        }\r\n\r\n        // if expression is 0 and other than operators,point are clicked\r\n        else if(exp === \"0\" && val !== '.') {\r\n            exp = \"\" + val;\r\n        }\r\n\r\n        // if expression is equal to or more than fifteen characters OR\r\n        // last char of expression is operator AND the current value is also an operator\r\n        else if((exp.length >= 15) || (isOperator(exp[exp.length - 1]) && isOperator(val))) {\r\n            exp = exp.slice();\r\n        }\r\n\r\n        // if last character is 0 AND the before character is operator AND the current value is not a operator AND a point\r\n        else if((exp[exp.length - 1] === '0') && isOperator(exp[exp.length - 2]) && !isOperator(val) && val !== '.') {\r\n            exp = exp.slice();\r\n        }\r\n\r\n        else if(pointCount === 1 && val === \".\") {\r\n            exp = exp.slice();\r\n        }\r\n\r\n        // In all other cases\r\n        else {\r\n\r\n            // if point is clicked\r\n            if(val === \".\") pointCount = 1;\r\n\r\n            // if operator is clicked\r\n            if(isOperator(val)) pointCount=0;\r\n\r\n            exp = exp + val;\r\n        }\r\n    }\r\n    // if expression length is more than nine characters in the mobiles make them small\r\n    if(exp.length > 9) {\r\n        document.querySelector(\".screen\").classList.add(\"small\");\r\n        isMoreThanNineCharacters++;\r\n    }\r\n    // after becoming more than nine characters if it reduces below nine then again make them big\r\n    if(exp.length <= 9 && isMoreThanNineCharacters !== 0) {\r\n        document.querySelector(\".screen\").classList.remove(\"small\");\r\n    }\r\n    return(\r\n        <div className=\"screen\">\r\n            {exp}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Screen;","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst STYLES = ['btn-operators','btn-result'];\r\nconst SIZES = ['btn-large'];\r\nconst TYPES = ['plus','minus','into','by','equals','backspace','clear'];\r\n\r\nconst Button = (props) => {\r\n    const buttonStyle = STYLES.includes(props.styling) ? props.styling : '';\r\n    const buttonSize = SIZES.includes(props.size) ? props.size : '';\r\n    const type = TYPES.includes(props.type) ? props.type : 'number';\r\n    if(!props.size) {\r\n        return(\r\n            <button \r\n                className={`btn ${buttonStyle} ${buttonSize} ${type}`}\r\n                style={{height:`${props.height}px`,width:`${props.width}px`}}\r\n            >\r\n                {props.children}\r\n            </button>\r\n        );\r\n    }\r\n    return(\r\n        <button \r\n            className={`btn ${buttonStyle} ${buttonSize}`}\r\n            style={{height:`${props.height}px`,width:`${(2 * props.width) + 10}px`}}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React,{ useRef,useLayoutEffect,useState } from 'react';\r\nimport './Keyboard.css';\r\n\r\nimport Button from './Button';\r\n\r\nconst Keyboard = ({dispatch}) => {\r\n    const[buttonWidth,setButtonWidth] = useState(0);\r\n    const[buttonHeight,setButtonHeight] = useState(0);\r\n    const keyboardRef = useRef();\r\n    if(!keyboardRef.current) {\r\n        keyboardRef.current = {};\r\n        keyboardRef.current.clientWidth = 0;\r\n        keyboardRef.current.clientHeight = 0;\r\n    }\r\n    useLayoutEffect(() => {\r\n        if(window.innerHeight >= 400) {\r\n            setButtonWidth((keyboardRef.current.clientWidth - 50) / 4);\r\n            setButtonHeight((keyboardRef.current.clientHeight - 60) / 5);\r\n        }\r\n        else {\r\n            setButtonWidth((keyboardRef.current.clientWidth - 35) / 4);\r\n            setButtonHeight((keyboardRef.current.clientHeight - 42) / 5);\r\n        }\r\n    },[keyboardRef.current.clientWidth,keyboardRef.current.clientHeight]);\r\n    const isButton = function(e) {\r\n        if(e.target.classList.contains('number')) {\r\n            dispatch({type : \"number\",payload : e.target.textContent});\r\n        }\r\n        else if(e.target.classList.contains('plus')) {\r\n            dispatch({type : \"operator\",payload : '+'});\r\n        }\r\n        else if(e.target.classList.contains('minus')) {\r\n            dispatch({type : \"operator\",payload : '-'});\r\n        }\r\n        else if(e.target.classList.contains('into')) {\r\n            dispatch({type : \"operator\",payload : '*'});\r\n        }\r\n        else if(e.target.classList.contains('by')) {\r\n            dispatch({type : \"operator\",payload : '/'});\r\n        }\r\n        else if(e.target.classList.contains('clear')) {\r\n            dispatch({type : \"operator\",payload : 'clear'});\r\n        }\r\n        else if(e.target.classList.contains('backspace')) {\r\n            dispatch({type : \"operator\",payload : 'backspace'});\r\n        }\r\n        else if(e.target.classList.contains('equals')) {\r\n            dispatch({type : \"operator\",payload : 'equals'});\r\n        }\r\n    }\r\n    return(\r\n        <div ref={keyboardRef} className=\"keyboard\" onClick={isButton}>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n                size=\"btn-large\"\r\n            >\r\n                calc\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n                styling='btn-operators'\r\n                type='backspace'\r\n            >\r\n                <i className=\"fas fa-backspace backspace\"></i>\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n                styling='btn-operators'\r\n                type='clear'\r\n            >\r\n                AC\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                7\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                8\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                9\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n                styling='btn-operators'\r\n                type='by'\r\n            >\r\n                <i className=\"fas fa-divide by\"></i>\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                4\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                5\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                6\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n                styling='btn-operators'\r\n                type='into'\r\n            >\r\n                <i className=\"fas fa-times into\"></i>\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                1\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                2\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                3\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n                styling='btn-operators'\r\n                type='minus'\r\n            >\r\n                <i className=\"fas fa-minus minus\"></i>\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                .\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n            >\r\n                0\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n                styling='btn-result'\r\n                type='equals'\r\n            >\r\n                <i className=\"fas fa-equals equals\"></i>\r\n            </Button>\r\n            <Button \r\n                height={buttonHeight}\r\n                width={buttonWidth}\r\n                styling='btn-operators'\r\n                type='plus'\r\n            >\r\n                <i className=\"fas fa-plus plus\"></i>\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Keyboard;","import React,{useReducer,useEffect,useState} from 'react';\r\nimport './Calculator.css';\r\n\r\nimport Screen from './Screen';\r\nimport Keyboard from './Keyboard';\r\n\r\nconst reducer = (state,action) => {\r\n    switch(action.type) {\r\n        case 'number' :\r\n            return {val : action.payload};\r\n        case 'operator' :\r\n            return {val : action.payload};\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Calculator = () => {\r\n    const[state,dispatch] = useReducer(reducer,{val : \"0\"});\r\n    const[load,setLoad] = useState(false);\r\n    const rerender = () => {\r\n        setLoad(!load);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\",rerender);\r\n        return () => {\r\n            window.removeEventListener(\"resize\",rerender);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[load]);\r\n    return(\r\n        <div className=\"calculator\">\r\n            <Screen val={state.val}/>\r\n            <Keyboard dispatch={dispatch}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\n\r\nconst Developer = () => {\r\n    return(\r\n        <div style={{color : \"rgba(255, 255, 255, 0.2)\",fontSize : \"1.5rem\"}}>\r\n            @Developer &nbsp;Sajid\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Developer;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Calculator from './components/Calculator';\r\nimport Developer from './components/Developer';\r\n\r\nconst App = () => {\r\n    return(\r\n        <>\r\n            <Calculator/>\r\n            <Developer/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById(\"root\"));"],"sourceRoot":""}